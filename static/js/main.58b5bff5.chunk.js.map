{"version":3,"sources":["Header.jsx","DayTitles.jsx","Day.jsx","Weeks.jsx","TimeSlot.jsx","TimeSelect.jsx","TimeCalendar.jsx","index.js"],"names":["defaultProps","selectedDate","Date","prevMonth","nextMonth","Header","props","react_default","a","createElement","className","onClick","DayTitles","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dateFormat","setState","refs","dayTitles","parentNode","clientWidth","_this2","days","startDate","dateFns","startOfWeek","currentMonth","toConsumableArray","Array","map","e","i","push","key","format","addDays","ref","React","Component","Day","classSet","onDateClick","date","Weeks","monthStart","startOfMonth","endDate","endOfWeek","endOfMonth","rows","day","_loop","isToday","isSameMonth","isSameDay","clickable","isWithinRange","startTime","endTime","disableHistory","isBefore","endOfYesterday","cloneDay","src_Day","DayTitles_DayTitles","PureComponent","bookings","TimeSlot","onTimeClick","time","timeSlot","TimeSelect","selectorClass","selectorClick","bind","assertThisInitialized","generateOpenHours","openTimes","openHours","dayStart","startOfDay","dayNum","parseInt","length","addHours","timeSlots","timePick","difference","differenceInMinutes","addMinutes","booking","start_time","subMinutes","end_time","cloneTime","src_TimeSlot","TimeCalendar","timeSelect","timeSelectToggle","onDateFunction","addMonths","isPast","subMonths","src_Header","Fragment","TimeSelect_TimeSelect","Weeks_Weeks","Welcome","id","handleTimeClick","interceptingBooking","divStyle","window","innerWidth","width","style","TimeCalendar_TimeCalendar","ReactDOM","render","src_Welcome","document","getElementById"],"mappings":"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","file":"static/js/main.58b5bff5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  selectedDate: PropTypes.string,\r\n  prevMonth: PropTypes.func,\r\n  nextMonth: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  selectedDate: new Date(),\r\n  prevMonth: null,\r\n  nextMonth: null,\r\n};\r\n\r\nfunction Header(props) {\r\n  return(\r\n    <div className=\"header row flex-middle\">\r\n\r\n      <div className=\"col col-start\">\r\n\r\n        <div className=\"icon\" onClick={props.prevMonth}>\r\n          chevron_left\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"col col-center\">\r\n\r\n        <span>\r\n          {props.selectedDate}\r\n        </span>\r\n\r\n      </div>\r\n\r\n      <div\r\n        className=\"col col-end\"\r\n        onClick={props.nextMonth}>\r\n\r\n        <div className=\"icon\">chevron_right</div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nHeader.propTypes = propTypes;\r\nHeader.defaultProps = defaultProps;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\n\r\nconst propTypes = {\r\n  currentMonth: PropTypes.instanceOf(Date)\r\n};\r\n\r\nconst defaultProps = {\r\n  currentMonth: null,\r\n};\r\n\r\nexport default class DayTitles extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    dateFormat: \"ddd\"\r\n  };\r\n}\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      dateFormat: this.refs.dayTitles.parentNode.clientWidth > 767 ? \"dddd\" : \"ddd\"\r\n    });\r\n}\r\n  render() {\r\n    const days = [];\r\n    let startDate = dateFns.startOfWeek(this.props.currentMonth);\r\n    [...Array(7)].map((e, i) =>\r\n      days.push(\r\n        <div className=\"col col-center\" key={i}>\r\n\r\n          {dateFns.format(dateFns.addDays(startDate, i), this.state.dateFormat)}\r\n        </div>\r\n      )\r\n    );\r\n    return <div className=\"days row\" ref=\"dayTitles\">\r\n      {days}\r\n    </div>;\r\n  }\r\n}\r\n\r\nDayTitles.propTypes = propTypes;\r\nDayTitles.defaultProps = defaultProps;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  classSet: PropTypes.string,\r\n  date: PropTypes.string,\r\n  onDateClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  classSet: \"\",\r\n  date: 1,\r\n  onDateClick: null,\r\n};\r\n\r\nfunction Day(props) {\r\n  return(\r\n    <div\r\n      className={'col cell' + props.classSet}\r\n      onClick={props.onDateClick}>\r\n\r\n      <span className=\"number\">\r\n        {props.date}\r\n      </span>\r\n\r\n      <span className=\"bg\">\r\n        {props.date}\r\n      </span>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nDay.propTypes = propTypes;\r\nDay.defaultProps = defaultProps;\r\n\r\nexport default Day;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport DayTitles from './DayTitles';\r\nimport Day from './Day';\r\n\r\nconst propTypes = {\r\n  selectedDate: PropTypes.instanceOf(Date),\r\n  onDateClick: PropTypes.func,\r\n  clickable: PropTypes.bool,\r\n  bookings: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst defaultProps = {\r\n  selectedDate: null,\r\n  onDateClick: null,\r\n  clickable: true,\r\n  bookings: [],\r\n};\r\n\r\nexport default class Weeks extends PureComponent {\r\n  render() {\r\n    const {selectedDate} = this.props;\r\n    const monthStart = dateFns.startOfMonth(selectedDate);\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    const endDate = dateFns.endOfWeek(dateFns.endOfMonth(monthStart));\r\n\r\n    const dateFormat = \"D\";\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        let classSet = '';\r\n        classSet += ' ' + dateFns.format(day, 'ddd');\r\n        classSet += dateFns.isToday(day) ? ' today' : ''\r\n        classSet += dateFns.isSameMonth(day, selectedDate) ? '' : ' disabled'\r\n        classSet += dateFns.isSameDay(day, selectedDate) ? ' selected' : ''\r\n        classSet += this.props.clickable ? '' : ' disabled'\r\n        classSet += dateFns.isWithinRange(day, this.props.startTime, this.props.endTime) ? ' selected' : ''\r\n        if(this.props.disableHistory)classSet += dateFns.isBefore(day, dateFns.endOfYesterday()) ? ' disabled' : '';\r\n\r\n        const cloneDay = day;\r\n        days.push(\r\n          <Day\r\n            classSet={classSet}\r\n            key={day}\r\n            date={dateFns.format(day, dateFormat)}\r\n            onDateClick={() => this.props.onDateClick(cloneDay)}\r\n            >\r\n          </Day>\r\n        );\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return (\r\n      <div className=\"body\">\r\n        <DayTitles currentMonth={this.props.selectedDate} />\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWeeks.propTypes = propTypes;\r\nWeeks.defaultProps = defaultProps;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  classSet: PropTypes.string,\r\n  time: PropTypes.string,\r\n  onTimeClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  classSet: '',\r\n  time: 12-30,\r\n  onTimeClick: null,\r\n};\r\n\r\nfunction TimeSlot(props) {\r\n  return(\r\n    <div\r\n      className={'col cell' + props.classSet}\r\n      onClick={props.onTimeClick}>\r\n      <p>\r\n        {props.time}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nTimeSlot.propTypes = propTypes;\r\nTimeSlot.defaultProps = defaultProps;\r\n\r\nexport default TimeSlot;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport TimeSlot from './TimeSlot';\r\n\r\nconst propTypes = {\r\n  disableHistory: PropTypes.bool,\r\n  selectedDate: PropTypes.instanceOf(Date),\r\n  timeSlot: PropTypes.number,\r\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  onTimeClick: PropTypes.func,\r\n  bookings: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst defaultProps = {\r\n  selectedDate: new Date(),\r\n  timeSlot: 30,\r\n  onTimeClick: null,\r\n  bookings:['05-10-19', '02-04-19'],\r\n};\r\n\r\nexport default class TimeSelect extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {selectorClass: 'inactive'};\r\n    this.selectorClick = this.selectorClick.bind(this);\r\n    this.generateOpenHours = this.generateOpenHours.bind(this);\r\n  }\r\n\r\n  selectorClick() {\r\n    this.setState({\r\n      selectorClass: this.state.selectorClass === 'inactive' ? 'active' : 'inactive'\r\n    });\r\n  };\r\n\r\n  generateOpenHours() {\r\n    const openTimes = [];\r\n    const openHours = this.props.openHours;\r\n    const dayStart = dateFns.startOfDay(this.props.selectedDate);\r\n    const dayNum = parseInt(dateFns.format(this.props.selectedDate, 'd'));\r\n    if(openHours.length === 1){\r\n      openTimes[0]=dateFns.addHours(dayStart, openHours[0][0]);\r\n      openTimes[1]=dateFns.addHours(dayStart, openHours[0][1]);\r\n    }\r\n    else if(openHours.length === 2) {\r\n      if(dayNum === 0 || dayNum === 6) {\r\n        openTimes[0]=dateFns.addHours(dayStart, openHours[1][0]);\r\n        openTimes[1]=dateFns.addHours(dayStart, openHours[1][1]);\r\n      }\r\n      else {\r\n        openTimes[0]=dateFns.addHours(dayStart, openHours[0][0]);\r\n        openTimes[1]=dateFns.addHours(dayStart, openHours[0][1]);\r\n      }\r\n    }\r\n    else if(openHours.length === 7){\r\n      openTimes[0]=dateFns.addHours(dayStart, openHours[dayNum][0]);\r\n      openTimes[1]=dateFns.addHours(dayStart, openHours[dayNum][1])\r\n    }\r\n    return openTimes;\r\n  }\r\n\r\n  render(){\r\n    const timeSlot = this.props.timeSlot;\r\n    const dateFormat = 'HH-mm';\r\n    const rows = [];\r\n    const openHours = this.generateOpenHours();\r\n    let timeSlots = [];\r\n    let timePick = openHours[0];\r\n    const difference = dateFns.differenceInMinutes(openHours[1], openHours[0]) / timeSlot % 4;\r\n    while(timePick < dateFns.addMinutes(openHours[1], timeSlot * difference)){\r\n      for (let i = 0; i < 4; i++) {\r\n        let classSet;\r\n        classSet += dateFns.isBefore(timePick, openHours[1]) ? '' : ' disabled';\r\n        classSet += dateFns.isWithinRange(timePick, this.props.startTime, this.props.endTime) ? ' selectedTime' : '';\r\n        if(this.props.disableHistory)classSet += dateFns.isBefore(timePick, new Date()) ? ' disabled' : '';\r\n        {this.props.bookings.map( (booking) =>\r\n          classSet += dateFns.isWithinRange(timePick, booking.start_time, dateFns.subMinutes(booking.end_time, 1)) ? ' disabled' : '',\r\n        )}\r\n        const cloneTime = timePick;\r\n        timeSlots.push(\r\n          <TimeSlot\r\n            key = {cloneTime}\r\n            time = {dateFns.format(cloneTime, dateFormat)}\r\n            classSet = {classSet}\r\n            onTimeClick = {() => this.props.onTimeClick(cloneTime)}\r\n            >\r\n          </TimeSlot>\r\n        );\r\n        timePick = dateFns.addMinutes(timePick, 30);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={timePick}>\r\n          {timeSlots}\r\n        </div>\r\n      );\r\n      timeSlots = [];\r\n    }\r\n\r\n    return (\r\n      <div className={'timeSelector'}>\r\n        <div className={\"optionSpacer body\"}>\r\n          <div className={\"optionHolder \" + this.state.selectorClass}>\r\n            {rows}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimeSelect.propTypes = propTypes;\r\nTimeSelect.defaultProps = defaultProps;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from 'date-fns';\r\nimport Header from './Header';\r\nimport Weeks from './Weeks';\r\nimport TimeSelect from './TimeSelect';\r\nimport './App.scss';\r\n\r\nconst propTypes = {\r\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  booking: PropTypes.arrayOf(PropTypes.string),\r\n  disableHistory: PropTypes.bool,\r\n  clickable: PropTypes.bool,\r\n  timeSlot: PropTypes.number,\r\n  onDateFunction: PropTypes.func,\r\n  onTimeClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  bookings:[],\r\n  disableHistory: true,\r\n  clickable: true,\r\n  timeSlot: 30,\r\n  onDateFunction: null,\r\n  onTimeClick: null\r\n};\r\n\r\nexport default class TimeCalendar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDate: new Date(),\r\n      timeSelect: false,\r\n    };\r\n    this.onDateClick = this.onDateClick.bind(this);\r\n    this.nextMonth = this.nextMonth.bind(this);\r\n    this.prevMonth = this.prevMonth.bind(this);\r\n    this.timeSelectToggle = this.timeSelectToggle.bind(this);\r\n  }\r\n\r\n  onDateClick(day) {\r\n    this.setState({\r\n      selectedDate: day\r\n    });\r\n    if (this.props.onDateFunction)this.props.onDateFunction(day);\r\n  };\r\n\r\n  nextMonth() {\r\n    this.setState({\r\n      selectedDate: dateFns.addMonths(this.state.selectedDate, 1)\r\n    });\r\n  };\r\n\r\n  prevMonth() {\r\n    if (this.props.disableHistory) {\r\n      if (dateFns.isPast(dateFns.startOfMonth(this.state.selectedDate))){\r\n        return\r\n      }\r\n    }\r\n    this.setState({\r\n      selectedDate: dateFns.subMonths(this.state.selectedDate, 1)\r\n    });\r\n  };\r\n\r\n  timeSelectToggle() {\r\n    this.setState({\r\n      timeSelect: !this.state.timeSelect\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        <Header\r\n          selectedDate={dateFns.format(this.state.selectedDate, \"MMMM YYYY\")}\r\n          nextMonth={this.nextMonth}\r\n          prevMonth={this.prevMonth}\r\n          />\r\n        {this.state.timeSelect ?\r\n          <>\r\n            <TimeSelect\r\n              selectedDate={this.state.selectedDate}\r\n              disableHistory={this.props.disableHistory}\r\n              timeSlot={this.props.timeSlot}\r\n              openHours={this.props.openHours}\r\n              onTimeClick={this.props.onTimeClick}\r\n              bookings={this.props.bookings}\r\n              startTime={this.props.startTime}\r\n              endTime={this.props.endTime}\r\n              />\r\n          </>\r\n          :\r\n          <>\r\n            <Weeks\r\n              selectedDate={this.state.selectedDate}\r\n              disableHistory={this.props.disableHistory}\r\n              onDateClick={this.onDateClick}\r\n              clickable={this.props.clickable}\r\n              bookings={this.props.bookings}\r\n              startTime={this.props.startTime}\r\n              endTime={this.props.endTime}\r\n              />\r\n          </>\r\n\r\n        }\r\n        {this.props.timeSlot && this.props.openHours?\r\n          <>\r\n            <div className={'timeSelector'}>\r\n              <p onClick={this.timeSelectToggle}>{this.state.timeSelect ? \"Select Day\" : \"Select Time\" } </p>\r\n            </div>\r\n          </>\r\n        :''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimeCalendar.propTypes = propTypes;\r\nTimeCalendar.defaultProps = defaultProps;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TimeCalendar from './TimeCalendar';\r\nimport dateFns from \"date-fns\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      startTime: '',\r\n      endTime: '',\r\n      bookings: [\r\n        {\r\n          id: 1,\r\n          start_time: \"2019-03-27 13:00:00\",\r\n          end_time: \"2019-03-27 13:30:00\"\r\n        },\r\n        {\r\n          id: 2,\r\n          start_time: \"2019-03-27 07:00:00\",\r\n          end_time: \"2019-03-27 07:30:00\",\r\n        }\r\n      ]\r\n    };\r\n    this.handleTimeClick = this.handleTimeClick.bind(this);\r\n  }\r\n  handleTimeClick(time) {\r\n    if(this.state.startTime === ''){\r\n      this.setState({\r\n        startTime: time\r\n      });\r\n    }\r\n    else if(!dateFns.isSameDay(this.state.startTime, time) || time<this.state.startTime){\r\n      this.setState({\r\n        startTime: '',\r\n        endTime: ''\r\n      });\r\n    }\r\n\r\n    let interceptingBooking = false;\r\n    if(time >this.state.startTime){\r\n      {this.state.bookings.map( (booking) =>\r\n        dateFns.isWithinRange(booking.start_time, this.state.startTime, time) ||\r\n        dateFns.isWithinRange(dateFns.subMinutes(booking.end_time, 1), this.state.startTime, time )\r\n        ? interceptingBooking = true : ''\r\n      )}\r\n    }\r\n\r\n    if(!interceptingBooking){\r\n      this.setState({\r\n        endTime: time\r\n      });\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const divStyle = window.innerWidth > 1023 ? {width:'40%'} : {width:'100%'};\r\n    const openHours = [\r\n      [9.5, 15],\r\n      [9, 23.5],\r\n      [8, 16],\r\n      [8.5, 18],\r\n      [10, 10],\r\n      [0, 0],\r\n      [9, 17]\r\n    ];\r\n    return(\r\n      <div style = {divStyle}>\r\n\r\n        <TimeCalendar\r\n          disableHistory\r\n          clickable\r\n          timeSlot = {30}\r\n          startTime = {this.state.startTime}\r\n          endTime = {this.state.endTime}\r\n          openHours = {openHours}\r\n          onTimeClick = {this.handleTimeClick}\r\n          bookings = {this.state.bookings}\r\n          />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Welcome;\r\n\r\nReactDOM.render(\r\n  <Welcome />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}