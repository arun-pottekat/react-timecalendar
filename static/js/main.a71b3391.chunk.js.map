{"version":3,"sources":["Header.js","DayTitles.jsx","Day.jsx","Week.jsx","TimeSlot.jsx","TimeSelect.jsx","TimeCalendar.jsx","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","prevMonth","currentMonth","nextMonth","defaultProps","Date","DayTitles","dateFormat","window","innerWidth","days","startDate","dateFns","startOfWeek","this","i","push","key","format","addDays","React","Component","Day","concat","onDateClick","date","Weeks","_this","_this$props","selectedDate","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","day","_loop","isToday","isSameMonth","isSameDay","clickable","cloneDay","src_Day","bookings","TimeSlot","onTimeClick","time","TimeSelect","state","selectorClass","selectorClick","setState","_this2","openHours","timeSlot","dayStart","startOfDay","dayNum","parseInt","openTime","closeTime","endOfDay","length","addHours","timePick","timeSlots","difference","differenceInMinutes","addMinutes","isBefore","cloneTime","src_TimeSlot","TimeCalendar","disableHistory","onDateFunction","addMonths","isPast","subMonths","src_Header","DayTitles_DayTitles","Week_Weeks","TimeSelect_TimeSelect","logging","console","log","loggingTime","divStyle","width","ReactDOM","render","style","TimeCalendar_TimeCalendar","document","getElementById"],"mappings":"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","file":"static/js/main.a71b3391.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n  <div className=\"header row flex-middle\">\r\n  <div className=\"col col-start\">\r\n  <div className=\"icon\" onClick={props.prevMonth}>\r\n  chevron_left\r\n  </div>\r\n  </div>\r\n  <div className=\"col col-center\">\r\n  <span>{props.currentMonth}</span>\r\n  </div>\r\n  <div className=\"col col-end\" onClick={props.nextMonth}>\r\n  <div className=\"icon\">chevron_right</div>\r\n  </div>\r\n  </div>\r\n);\r\n\r\nHeader.propTypes = {\r\n  currentMonth: PropTypes.string,\r\n  prevMonth: PropTypes.func,\r\n  nextMonth: PropTypes.func,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  currentMonth: new Date(),\r\n  prevMonth: null,\r\n  nextMonth: null,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\n\r\nexport default class DayTitles extends React.Component {\r\n  render() {\r\n    const dateFormat = window.innerWidth > 767 ? \"dddd\" : \"ddd\";\r\n    const days = [];\r\n    let startDate = dateFns.startOfWeek(this.props.currentMonth);\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push(\r\n        <div className=\"col col-center\" key={i}>\r\n        {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"days row\">{days}</div>;\r\n  }\r\n}\r\n\r\n// DayTitles.propTypes = {\r\n//   currentMonth: PropTypes.instanceOf(dateFns)\r\n// };\r\n\r\nDayTitles.defaultProps = {\r\n  currentMonth: null,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Day = props => (\r\n  <div className={`col cell${props.className}`} onClick={props.onDateClick}>\r\n  <span className=\"number\">{props.date}</span>\r\n  <span className=\"bg\">{props.date}</span>\r\n  </div>\r\n);\r\n\r\nDay.propTypes = {\r\n  className: PropTypes.string,\r\n  date: PropTypes.string,\r\n  onDateClick: PropTypes.func,\r\n};\r\n\r\nDay.defaultProps = {\r\n  className: '',\r\n  date: 1,\r\n  onDateClick: null,\r\n};\r\n\r\nexport default Day;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport Day from './Day';\r\n\r\n\r\nexport default class Weeks extends React.Component {\r\n\r\n  render() {\r\n    const { currentMonth, selectedDate } = this.props;\r\n    const monthStart = dateFns.startOfMonth(currentMonth);\r\n    const monthEnd = dateFns.endOfMonth(monthStart);\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n    const dateFormat = \"D\";\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        let className = '';\r\n        className += dateFns.isToday(day) ? ' today' : ''\r\n        className += dateFns.isSameMonth(day, currentMonth) ? '' : ' disabled'\r\n        className += dateFns.isSameDay(day, selectedDate) ? ' selected' : ''\r\n        className += this.props.clickable ? '' : ' disabled'\r\n\r\n        const cloneDay = day;\r\n        days.push(\r\n          <Day\r\n          className={className}\r\n          key={day}\r\n          date={dateFns.format(day, dateFormat)}\r\n          onDateClick={() => this.props.onDateClick(cloneDay)}\r\n          >\r\n          </Day>\r\n        );\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={day}>\r\n        {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body\">{rows}</div>;\r\n  }\r\n}\r\n\r\nWeeks.propTypes = {\r\n  // currentMonth: PropTypes.instanceOf(dateFns),\r\n  // selectedDate: PropTypes.instanceOf(dateFns),\r\n  onDateClick: PropTypes.func,\r\n  clickable: PropTypes.bool,\r\n  bookings: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nWeeks.defaultProps = {\r\n  currentMonth: null,\r\n  selectedDate: null,\r\n  onDateClick: null,\r\n  clickable: true,\r\n  bookings:['07-03-19', '02-04-19'],\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TimeSlot = props => (\r\n  <div className={`col cell${props.className}`} onClick={props.onTimeClick}>\r\n  <p>{props.time}</p>\r\n  </div>\r\n);\r\n\r\n\r\nexport default TimeSlot;\r\n\r\nTimeSlot.propTypes = {\r\n  className: PropTypes.string,\r\n  time: PropTypes.string,\r\n  onTimeClick: PropTypes.func,\r\n};\r\n\r\nTimeSlot.defaultProps = {\r\n  className: '',\r\n  time: 12-30,\r\n  onTimeClick: null,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport TimeSlot from './TimeSlot';\r\n\r\nexport default class TimeSelect extends React.Component {\r\n  state = {\r\n    selectorClass: 'inactive',\r\n  };\r\n\r\n  selectorClick = () => {\r\n    this.setState({\r\n      selectorClass: this.state.selectorClass === 'inactive' ? 'active' : 'inactive'\r\n    });\r\n  };\r\n\r\n  render(){\r\n    const openHours = this.props.openHours;\r\n    const timeSlot = this.props.timeSlot;\r\n    const dayStart = dateFns.startOfDay(this.props.selectedDate);\r\n    let dayNum = parseInt(dateFns.format(this.props.selectedDate, 'd'));\r\n    let openTime = dayStart;\r\n    let closeTime = dateFns.endOfDay(dayStart);\r\n\r\n    if(openHours.length === 1){\r\n      openTime=dateFns.addHours(dayStart, openHours[0][0]);\r\n      closeTime=dateFns.addHours(dayStart, openHours[0][1]);\r\n    }\r\n    else if(openHours.length === 2) {\r\n      if(dayNum === 0 || dayNum === 6) {\r\n        openTime=dateFns.addHours(dayStart, openHours[1][0]);\r\n        closeTime=dateFns.addHours(dayStart, openHours[1][1]);\r\n      }\r\n      else {\r\n        openTime=dateFns.addHours(dayStart, openHours[0][0]);\r\n        closeTime=dateFns.addHours(dayStart, openHours[0][1]);\r\n      }\r\n    }\r\n    else if(openHours.length === 7){\r\n      openTime=dateFns.addHours(dayStart, openHours[dayNum][0]);\r\n      closeTime=dateFns.addHours(dayStart, openHours[dayNum][1])\r\n    }\r\n\r\n    const dateFormat = 'HH-mm';\r\n    const rows = [];\r\n    let timePick = openTime;\r\n    let timeSlots = [];\r\n    let difference = dateFns.differenceInMinutes(closeTime, openTime) / timeSlot % 4;\r\n    while(timePick < dateFns.addMinutes(closeTime, timeSlot * difference)){\r\n      for (let i = 0; i < 4; i++) {\r\n        let className = '';\r\n        className += dateFns.isBefore(timePick, closeTime) ? '' : ' disabled'\r\n        // if (this.props.bookings) className += this.props.bookings.includes(timePick) ? ' booked' : ''\r\n        const cloneTime = timePick;\r\n        timeSlots.push(\r\n\r\n          <TimeSlot\r\n          key = {cloneTime}\r\n          time = {dateFns.format(cloneTime, dateFormat)}\r\n          className = {className}\r\n          onTimeClick = {() => this.props.onTimeClick(cloneTime)}\r\n          >\r\n          </TimeSlot>\r\n        );\r\n        timePick = dateFns.addMinutes(timePick, 30);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={timePick}>\r\n        {timeSlots}\r\n        </div>\r\n      );\r\n      timeSlots = [];\r\n    }\r\n\r\n    return (\r\n      <div className={'timeSelector'}>\r\n      <p onClick={this.selectorClick}>Make a booking</p>\r\n      <div className={\"optionSpacer body\"}>\r\n      <div className={\"optionHolder \" + this.state.selectorClass}>\r\n      {rows}\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nTimeSelect.propTypes = {\r\n  // selectedDate: PropTypes.instanceOf(dateFns),\r\n  timeSlot: PropTypes.number,\r\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  onTimeClick: PropTypes.func,\r\n  bookings: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nTimeSelect.defaultProps = {\r\n  // selectedDate: PropTypes.instanceOf(dateFns),\r\n  timeSlot: 30,\r\n  openHours: [0][0],\r\n  onTimeClick: null,\r\n  bookings:['05-10-19', '02-04-19'],\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport Header from './Header';\r\nimport DayTitles from './DayTitles';\r\nimport Weeks from './Week';\r\nimport TimeSelect from './TimeSelect';\r\nimport \"./App.css\";\r\n\r\nexport default class TimeCalendar extends React.Component {\r\n  state = {\r\n    currentMonth: new Date(),\r\n    selectedDate: new Date(),\r\n    disableHistory: this.props.disableHistory,\r\n  };\r\n\r\n  onDateClick = day => {\r\n    this.setState({\r\n      selectedDate: day\r\n    });\r\n    if (this.props.onDateFunction)this.props.onDateFunction(day);\r\n  };\r\n\r\n  nextMonth = () => {\r\n    this.setState({\r\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  prevMonth = () => {\r\n    if (this.state.disableHistory) {\r\n      if (dateFns.isPast(this.state.currentMonth)){\r\n        return\r\n      }\r\n    }\r\n    this.setState({\r\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n      <Header\r\n      currentMonth={dateFns.format(this.state.currentMonth, \"MMMM YYYY\")}\r\n      nextMonth={this.nextMonth}\r\n      prevMonth={this.prevMonth}\r\n      />\r\n      <DayTitles currentMonth={this.state.currentMonth} />\r\n      <Weeks\r\n      currentMonth={this.state.currentMonth}\r\n      selectedDate={this.state.selectedDate}\r\n      onDateClick={this.onDateClick}\r\n      clickable={this.props.clickable}\r\n      bookings={this.props.bookings}\r\n      />\r\n      {this.props.timeSlot && this.props.clickable && this.props.onTimeClick ?\r\n        <TimeSelect\r\n        selectedDate={this.state.selectedDate}\r\n        timeSlot={this.props.timeSlot}\r\n        openHours={this.props.openHours}\r\n        onTimeClick={this.props.onTimeClick}\r\n        bookings={this.props.bookings}\r\n        /> : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimeCalendar.propTypes = {\r\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  booking: PropTypes.arrayOf(PropTypes.string),\r\n  disableHistory: PropTypes.bool,\r\n  clickable: PropTypes.bool,\r\n  timeSlot: PropTypes.number,\r\n  onDateFunction: PropTypes.func,\r\n  onTimeClick: PropTypes.func,\r\n};\r\n\r\nTimeCalendar.defaultProps = {\r\n  openHours: [0][0],\r\n  bookings:['07-03-19', '02-04-19'],\r\n  disableHistory: true,\r\n  clickable: true,\r\n  timeSlot: 30,\r\n  onDateFunction: null,\r\n  onTimeClick: null\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TimeCalendar from './TimeCalendar';\nimport dateFns from \"date-fns\";\n\nfunction logging(day) {\n  console.log(day)\n}\nfunction loggingTime(time) {\n  console.log(time);\n  console.log(dateFns.format(time, \"YY-MM-DD-mm\"))\n}\nconst divStyle = window.innerWidth > 1023 ? {width:'40%'} : {width:'100%'};\nconst openHours = [\n  [9.5, 15],\n  [9, 23.5]\n];\n// let bookings = [\n//  'Thu Mar 07 2019 14:30:00 GMT+1100 (Australian Eastern Daylight Time)'\n// ]\nfunction Welcome() {\n  return (\n  <div style = {divStyle}>\n\n  <TimeCalendar\n  disableHistory = {true}\n  clickable = {true}\n  timeSlot = {30}\n  onDateFunction = {logging}\n  openHours = {openHours}\n  onTimeClick = {loggingTime}\n  // bookings = {bookings}\n  />\n\n  </div>\n);\n}\nReactDOM.render(<Welcome />, document.getElementById('root'));\n"],"sourceRoot":""}