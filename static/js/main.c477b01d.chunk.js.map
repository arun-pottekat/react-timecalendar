{"version":3,"sources":["Header.jsx","DayTitles.jsx","Day.jsx","Weeks.jsx","TimeSlot.jsx","TimeSelect.jsx","TimeCalendar.jsx","index.js"],"names":["defaultProps","selectedDate","Date","prevMonth","nextMonth","Header","props","react_default","a","createElement","className","onClick","DayTitles","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dateFormat","setState","refs","dayTitles","parentNode","clientWidth","_this2","days","startDate","dateFns","startOfWeek","currentMonth","toConsumableArray","Array","map","e","i","push","key","format","addDays","ref","React","Component","Day","classSet","onDateClick","date","Weeks","monthStart","startOfMonth","endDate","endOfWeek","endOfMonth","rows","day","_loop","isToday","isSameMonth","isSameDay","clickable","isWithinRange","startTime","endTime","disableHistory","isBefore","endOfYesterday","cloneDay","src_Day","DayTitles_DayTitles","PureComponent","bookings","TimeSlot","onTimeClick","time","timeSlot","TimeSelect","selectorClass","selectorClick","bind","assertThisInitialized","openHours","dayStart","startOfDay","dayNum","parseInt","openTime","closeTime","endOfDay","length","addHours","timePick","timeSlots","difference","differenceInMinutes","addMinutes","booking","start_time","subMinutes","end_time","cloneTime","src_TimeSlot","TimeCalendar","timeSelect","timeSelectToggle","onDateFunction","addMonths","isPast","subMonths","src_Header","Fragment","TimeSelect_TimeSelect","Weeks_Weeks","Welcome","id","handleTimeClick","interceptingBooking","divStyle","window","innerWidth","width","style","TimeCalendar_TimeCalendar","ReactDOM","render","src_Welcome","document","getElementById"],"mappings":"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","file":"static/js/main.c477b01d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  selectedDate: PropTypes.string,\n  prevMonth: PropTypes.func,\n  nextMonth: PropTypes.func,\n};\n\nconst defaultProps = {\n  selectedDate: new Date(),\n  prevMonth: null,\n  nextMonth: null,\n};\n\nfunction Header(props) {\n  return(\n    <div className=\"header row flex-middle\">\n\n      <div className=\"col col-start\">\n\n        <div className=\"icon\" onClick={props.prevMonth}>\n          chevron_left\n        </div>\n\n      </div>\n\n      <div className=\"col col-center\">\n\n        <span>\n          {props.selectedDate}\n        </span>\n\n      </div>\n\n      <div\n        className=\"col col-end\"\n        onClick={props.nextMonth}>\n\n        <div className=\"icon\">chevron_right</div>\n\n      </div>\n\n    </div>\n  );\n}\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport dateFns from \"date-fns\";\n\nconst propTypes = {\n  currentMonth: PropTypes.instanceOf(Date)\n};\n\nconst defaultProps = {\n  currentMonth: null,\n};\n\nexport default class DayTitles extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    dateFormat: \"ddd\"\n  };\n}\n\n  componentDidMount() {\n    this.setState({\n      dateFormat: this.refs.dayTitles.parentNode.clientWidth > 767 ? \"dddd\" : \"ddd\"\n    });\n}\n  render() {\n    const days = [];\n    let startDate = dateFns.startOfWeek(this.props.currentMonth);\n    [...Array(7)].map((e, i) =>\n      days.push(\n        <div className=\"col col-center\" key={i}>\n\n          {dateFns.format(dateFns.addDays(startDate, i), this.state.dateFormat)}\n        </div>\n      )\n    );\n    return <div className=\"days row\" ref=\"dayTitles\">\n      {days}\n    </div>;\n  }\n}\n\nDayTitles.propTypes = propTypes;\nDayTitles.defaultProps = defaultProps;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  classSet: PropTypes.string,\n  date: PropTypes.string,\n  onDateClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  classSet: \"\",\n  date: 1,\n  onDateClick: null,\n};\n\nfunction Day(props) {\n  return(\n    <div\n      className={'col cell' + props.classSet}\n      onClick={props.onDateClick}>\n\n      <span className=\"number\">\n        {props.date}\n      </span>\n\n      <span className=\"bg\">\n        {props.date}\n      </span>\n\n    </div>\n  );\n}\n\nDay.propTypes = propTypes;\nDay.defaultProps = defaultProps;\n\nexport default Day;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport dateFns from \"date-fns\";\nimport Header from './Header';\nimport DayTitles from './DayTitles';\nimport Day from './Day';\n\nconst propTypes = {\n  selectedDate: PropTypes.instanceOf(Date),\n  onDateClick: PropTypes.func,\n  clickable: PropTypes.bool,\n  bookings: PropTypes.arrayOf(PropTypes.object)\n};\n\nconst defaultProps = {\n  selectedDate: null,\n  onDateClick: null,\n  clickable: true,\n  bookings: [],\n};\n\nexport default class Weeks extends PureComponent {\n  render() {\n    const {selectedDate} = this.props;\n    const monthStart = dateFns.startOfMonth(selectedDate);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(dateFns.endOfMonth(monthStart));\n\n    const dateFormat = \"D\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n\n        let classSet = '';\n        classSet += ' ' + dateFns.format(day, 'ddd');\n        classSet += dateFns.isToday(day) ? ' today' : ''\n        classSet += dateFns.isSameMonth(day, selectedDate) ? '' : ' disabled'\n        classSet += dateFns.isSameDay(day, selectedDate) ? ' selected' : ''\n        classSet += this.props.clickable ? '' : ' disabled'\n        classSet += dateFns.isWithinRange(day, this.props.startTime, this.props.endTime) ? ' selected' : ''\n        if(this.props.disableHistory)classSet += dateFns.isBefore(day, dateFns.endOfYesterday()) ? ' disabled' : '';\n\n        const cloneDay = day;\n        days.push(\n          <Day\n            classSet={classSet}\n            key={day}\n            date={dateFns.format(day, dateFormat)}\n            onDateClick={() => this.props.onDateClick(cloneDay)}\n            >\n          </Day>\n        );\n        day = dateFns.addDays(day, 1);\n      }\n      rows.push(\n        <div className=\"row\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return (\n      <div className=\"body\">\n        <DayTitles currentMonth={this.props.selectedDate} />\n        {rows}\n      </div>\n    );\n  }\n}\n\nWeeks.propTypes = propTypes;\nWeeks.defaultProps = defaultProps;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  classSet: PropTypes.string,\n  time: PropTypes.string,\n  onTimeClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  classSet: '',\n  time: 12-30,\n  onTimeClick: null,\n};\n\nfunction TimeSlot(props) {\n  return(\n    <div\n      className={'col cell' + props.classSet}\n      onClick={props.onTimeClick}>\n      <p>\n        {props.time}\n      </p>\n    </div>\n  );\n}\n\nTimeSlot.propTypes = propTypes;\nTimeSlot.defaultProps = defaultProps;\n\nexport default TimeSlot;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport dateFns from \"date-fns\";\nimport TimeSlot from './TimeSlot';\n\nconst propTypes = {\n  selectedDate: PropTypes.instanceOf(Date),\n  timeSlot: PropTypes.number,\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  onTimeClick: PropTypes.func,\n  bookings: PropTypes.arrayOf(PropTypes.object)\n};\n\nconst defaultProps = {\n  selectedDate: new Date(),\n  timeSlot: 30,\n  onTimeClick: null,\n  bookings:['05-10-19', '02-04-19'],\n};\n\nexport default class TimeSelect extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {selectorClass: 'inactive'};\n    this.selectorClick = this.selectorClick.bind(this);\n  }\n\n  selectorClick() {\n    this.setState({\n      selectorClass: this.state.selectorClass === 'inactive' ? 'active' : 'inactive'\n    });\n  };\n\n  render(){\n    const openHours = this.props.openHours;\n    const timeSlot = this.props.timeSlot;\n    const dayStart = dateFns.startOfDay(this.props.selectedDate);\n    let dayNum = parseInt(dateFns.format(this.props.selectedDate, 'd'));\n    let openTime = dayStart;\n    let closeTime = dateFns.endOfDay(dayStart);\n\n    if(openHours.length === 1){\n      openTime=dateFns.addHours(dayStart, openHours[0][0]);\n      closeTime=dateFns.addHours(dayStart, openHours[0][1]);\n    }\n    else if(openHours.length === 2) {\n      if(dayNum === 0 || dayNum === 6) {\n        openTime=dateFns.addHours(dayStart, openHours[1][0]);\n        closeTime=dateFns.addHours(dayStart, openHours[1][1]);\n      }\n      else {\n        openTime=dateFns.addHours(dayStart, openHours[0][0]);\n        closeTime=dateFns.addHours(dayStart, openHours[0][1]);\n      }\n    }\n    else if(openHours.length === 7){\n      openTime=dateFns.addHours(dayStart, openHours[dayNum][0]);\n      closeTime=dateFns.addHours(dayStart, openHours[dayNum][1])\n    }\n\n    const dateFormat = 'HH-mm';\n    const rows = [];\n    let timePick = openTime;\n    let timeSlots = [];\n    let difference = dateFns.differenceInMinutes(closeTime, openTime) / timeSlot % 4;\n    while(timePick < dateFns.addMinutes(closeTime, timeSlot * difference)){\n      for (let i = 0; i < 4; i++) {\n        let classSet = '';\n        classSet += dateFns.isBefore(timePick, closeTime) ? '' : ' disabled';\n        classSet += dateFns.isWithinRange(timePick, this.props.startTime, this.props.endTime) ? ' selectedTime' : '';\n        if(this.props.disableHistory)classSet += dateFns.isBefore(timePick, new Date()) ? ' disabled' : '';\n        {this.props.bookings.map( (booking) =>\n          classSet += dateFns.isWithinRange(timePick, booking.start_time, dateFns.subMinutes(booking.end_time, 1)) ? ' disabled' : '',\n        )}\n\n        const cloneTime = timePick;\n        timeSlots.push(\n          <TimeSlot\n            key = {cloneTime}\n            time = {dateFns.format(cloneTime, dateFormat)}\n            classSet = {classSet}\n            onTimeClick = {() => this.props.onTimeClick(cloneTime)}\n            >\n          </TimeSlot>\n        );\n        timePick = dateFns.addMinutes(timePick, 30);\n      }\n      rows.push(\n        <div className=\"row\" key={timePick}>\n          {timeSlots}\n        </div>\n      );\n      timeSlots = [];\n    }\n\n    return (\n      <div className={'timeSelector'}>\n        <div className={\"optionSpacer body\"}>\n          <div className={\"optionHolder \" + this.state.selectorClass}>\n            {rows}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeSelect.propTypes = propTypes;\nTimeSelect.defaultProps = defaultProps;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport dateFns from 'date-fns';\nimport Header from './Header';\nimport Weeks from './Weeks';\nimport TimeSelect from './TimeSelect';\nimport './App.scss';\n\nconst propTypes = {\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  booking: PropTypes.arrayOf(PropTypes.string),\n  disableHistory: PropTypes.bool,\n  clickable: PropTypes.bool,\n  timeSlot: PropTypes.number,\n  onDateFunction: PropTypes.func,\n  onTimeClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  bookings:[],\n  disableHistory: true,\n  clickable: true,\n  timeSlot: 30,\n  onDateFunction: null,\n  onTimeClick: null\n};\n\nexport default class TimeCalendar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date(),\n      timeSelect: false,\n    };\n    this.onDateClick = this.onDateClick.bind(this);\n    this.nextMonth = this.nextMonth.bind(this);\n    this.prevMonth = this.prevMonth.bind(this);\n    this.timeSelectToggle = this.timeSelectToggle.bind(this);\n  }\n\n  onDateClick(day) {\n    this.setState({\n      selectedDate: day\n    });\n    if (this.props.onDateFunction)this.props.onDateFunction(day);\n  };\n\n  nextMonth() {\n    this.setState({\n      selectedDate: dateFns.addMonths(this.state.selectedDate, 1)\n    });\n  };\n\n  prevMonth() {\n    if (this.props.disableHistory) {\n      if (dateFns.isPast(dateFns.startOfMonth(this.state.selectedDate))){\n        return\n      }\n    }\n    this.setState({\n      selectedDate: dateFns.subMonths(this.state.selectedDate, 1)\n    });\n  };\n\n  timeSelectToggle() {\n    this.setState({\n      timeSelect: !this.state.timeSelect\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        <Header\n          selectedDate={dateFns.format(this.state.selectedDate, \"MMMM YYYY\")}\n          nextMonth={this.nextMonth}\n          prevMonth={this.prevMonth}\n          />\n        {this.state.timeSelect ?\n          <React.Fragment>\n            <TimeSelect\n              selectedDate={this.state.selectedDate}\n              disableHistory={this.props.disableHistory}\n              timeSlot={this.props.timeSlot}\n              openHours={this.props.openHours}\n              onTimeClick={this.props.onTimeClick}\n              bookings={this.props.bookings}\n              startTime={this.props.startTime}\n              endTime={this.props.endTime}\n              />\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <Weeks\n              selectedDate={this.state.selectedDate}\n              disableHistory={this.props.disableHistory}\n              onDateClick={this.onDateClick}\n              clickable={this.props.clickable}\n              bookings={this.props.bookings}\n              startTime={this.props.startTime}\n              endTime={this.props.endTime}\n              />\n          </React.Fragment>\n\n        }\n        {this.props.timeSlot && this.props.openHours?\n          <React.Fragment>\n            <div className={'timeSelector'}>\n              <p onClick={this.timeSelectToggle}>{this.state.timeSelect ? \"Select Day\" : \"Select Time\" } </p>\n            </div>\n          </React.Fragment>\n        :''}\n      </div>\n    );\n  }\n}\n\nTimeCalendar.propTypes = propTypes;\nTimeCalendar.defaultProps = defaultProps;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TimeCalendar from './TimeCalendar';\nimport dateFns from \"date-fns\";\n\nclass Welcome extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      startTime: '',\n      endTime: '',\n      bookings: [\n        {\n          id: 1,\n          start_time: \"2019-03-27 13:00:00\",\n          end_time: \"2019-03-27 13:30:00\"\n        },\n        {\n          id: 2,\n          start_time: \"2019-03-27 07:00:00\",\n          end_time: \"2019-03-27 07:30:00\",\n        }\n      ]\n    };\n    this.handleTimeClick = this.handleTimeClick.bind(this);\n  }\n  handleTimeClick(time) {\n    if(this.state.startTime === ''){\n      this.setState({\n        startTime: time\n      });\n    }\n    else if(!dateFns.isSameDay(this.state.startTime, time) || time<this.state.startTime){\n      this.setState({\n        startTime: '',\n        endTime: ''\n      });\n    }\n\n    let interceptingBooking = false;\n    if(time >this.state.startTime){\n      {this.state.bookings.map( (booking) =>\n        dateFns.isWithinRange(booking.start_time, this.state.startTime, time) ||\n        dateFns.isWithinRange(dateFns.subMinutes(booking.end_time, 1), this.state.startTime, time )\n        ? interceptingBooking = true : ''\n      )}\n    }\n\n    if(!interceptingBooking){\n      this.setState({\n        endTime: time\n      });\n    }\n  };\n\n  render () {\n    const divStyle = window.innerWidth > 1023 ? {width:'40%'} : {width:'100%'};\n    const openHours = [\n      [9.5, 15],\n      [9, 23.5],\n      [8, 16],\n      [8.5, 18],\n      [10, 10],\n      [0, 0],\n      [9, 17]\n    ];\n    return(\n      <div style = {divStyle}>\n\n        <TimeCalendar\n          disableHistory\n          clickable\n          timeSlot = {30}\n          startTime = {this.state.startTime}\n          endTime = {this.state.endTime}\n          openHours = {openHours}\n          onTimeClick = {this.handleTimeClick}\n          bookings = {this.state.bookings}\n          />\n\n      </div>\n    );\n  }\n\n}\n\nexport default Welcome;\n\nReactDOM.render(\n  <Welcome />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}