{"version":3,"sources":["Header.jsx","DayTitles.jsx","Day.jsx","Weeks.jsx","TimeSlot.jsx","TimeSelect.jsx","TimeCalendar.jsx","index.js"],"names":["defaultProps","currentMonth","Date","prevMonth","nextMonth","Header","props","react_default","a","createElement","className","onClick","DayTitles","dateFormat","window","innerWidth","days","startDate","dateFns","startOfWeek","this","i","push","key","format","addDays","React","Component","Day","classSet","onDateClick","date","Weeks","_this","_this$props","selectedDate","monthStart","startOfMonth","endDate","endOfWeek","endOfMonth","rows","day","_loop","isToday","isSameMonth","isSameDay","clickable","isWithinRange","startTime","endTime","cloneDay","src_Day","PureComponent","bookings","TimeSlot","onTimeClick","time","timeSlot","TimeSelect","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selectorClass","selectorClick","bind","assertThisInitialized","setState","_this2","openHours","dayStart","startOfDay","dayNum","parseInt","openTime","closeTime","endOfDay","length","addHours","timePick","timeSlots","difference","differenceInMinutes","addMinutes","isBefore","cloneTime","src_TimeSlot","TimeCalendar","onDateFunction","addMonths","disableHistory","isPast","subMonths","src_Header","DayTitles_DayTitles","Weeks_Weeks","TimeSelect_TimeSelect","Welcome","handleTimeClick","divStyle","width","style","TimeCalendar_TimeCalendar","ReactDOM","render","src_Welcome","document","getElementById"],"mappings":"sNASMA,EAAe,CACnBC,aAAc,IAAIC,KAClBC,UAAW,KACXC,UAAW,MAGb,SAASC,EAAOC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAASL,EAAMH,WAArC,iBAMFI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAAA,YACGH,EAAML,eAKXM,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVC,QAASL,EAAMF,WAEfG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,mBAQRL,EAAOL,aAAeA,EAEPK,QCrCMO,mLAKjB,IAHA,IAAMC,EAAaC,OAAOC,WAAa,IAAM,OAAS,MAChDC,EAAO,GACTC,EAAYC,IAAQC,YAAYC,KAAKd,MAAML,cACtCoB,EAAI,EAAGA,EAAI,EAAGA,IACrBL,EAAKM,KACHf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBa,IAAKF,GAElCH,IAAQM,OAAON,IAAQO,QAAQR,EAAWI,GAAIR,KAIrD,OAAON,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACnBM,UAdgCU,IAAMC,WAoB7Cf,EAAUZ,aAxBW,CACnBC,aAAc,MCMhB,SAAS2B,EAAItB,GACX,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAW,WAAaJ,EAAMuB,SAC9BlB,QAASL,EAAMwB,aAEfvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACbJ,EAAMyB,MAGTxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MACbJ,EAAMyB,OAQfH,EAAI5B,aAzBiB,CACnB6B,SAAU,GACVE,KAAM,EACND,YAAa,MAwBAF,QCfMI,mLAYjB,IAXO,IAAAC,EAAAb,KAAAc,EAC8Bd,KAAKd,MAAnCL,EADAiC,EACAjC,aAAckC,EADdD,EACcC,aACfC,EAAalB,IAAQmB,aAAapC,GAClCgB,EAAYC,IAAQC,YAAYiB,GAChCE,EAAUpB,IAAQqB,UAAUrB,IAAQsB,WAAWJ,IAG/CK,EAAO,GACTzB,EAAO,GACP0B,EAAMzB,EAEHyB,GAAOJ,GAAS,CACrB,IADqB,IAAAK,EAAA,SACZtB,GAEP,IAAIQ,EAAW,GACfA,GAAY,IAAMX,IAAQM,OAAOkB,EAAK,OACtCb,GAAYX,IAAQ0B,QAAQF,GAAO,SAAW,GAC9Cb,GAAYX,IAAQ2B,YAAYH,EAAKzC,GAAgB,GAAK,YAC1D4B,GAAYX,IAAQ4B,UAAUJ,EAAKP,GAAgB,YAAc,GACjEN,GAAYI,EAAK3B,MAAMyC,UAAY,GAAK,YACxClB,GAAYX,IAAQ8B,cAAcN,EAAKT,EAAK3B,MAAM2C,UAAWhB,EAAK3B,MAAM4C,SAAW,YAAc,GAEjG,IAAMC,EAAWT,EACjB1B,EAAKM,KACHf,EAAAC,EAAAC,cAAC2C,EAAD,CACEvB,SAAUA,EACVN,IAAKmB,EACLX,KAAMb,IAAQM,OAAOkB,EArBV,KAsBXZ,YAAa,kBAAMG,EAAK3B,MAAMwB,YAAYqB,OAI9CT,EAAMxB,IAAQO,QAAQiB,EAAK,IApBpBrB,EAAI,EAAGA,EAAI,EAAGA,IAAKsB,IAsB5BF,EAAKnB,KACHf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMa,IAAKmB,GACvB1B,IAGLA,EAAO,GAET,OAAOT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ+B,UA1CCY,iBA+CjCrB,EAAMhC,aAvDa,CACnBC,aAAc,KACdkC,aAAc,KACdL,YAAa,KACbiB,WAAW,EACXO,SAAU,CAAC,WAAY,aCHzB,SAASC,EAASjD,GAChB,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAW,WAAaJ,EAAMuB,SAC9BlB,QAASL,EAAMkD,aACfjD,EAAAC,EAAAC,cAAA,SACGH,EAAMmD,OAOfF,EAASvD,aAnBY,CACnB6B,SAAU,GACV4B,MAAM,GACND,YAAa,MAkBAD,QCjBTvD,EAAe,CACnBmC,aAAc,IAAIjC,KAClBwD,SAAU,GACVF,YAAa,KACbF,SAAS,CAAC,WAAY,aAGHK,cACnB,SAAAA,EAAYrD,GAAO,IAAA2B,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAAxC,KAAAuC,IACjB1B,EAAA2B,OAAAE,EAAA,EAAAF,CAAAxC,KAAAwC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA5C,KAAMd,KACD2D,MAAQ,CAACC,cAAe,YAC7BjC,EAAKkC,cAAgBlC,EAAKkC,cAAcC,KAAnBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA3B,KAHJA,+EAOjBb,KAAKkD,SAAS,CACZJ,cAA4C,aAA7B9C,KAAK6C,MAAMC,cAA+B,SAAW,8CAIhE,IAAAK,EAAAnD,KACAoD,EAAYpD,KAAKd,MAAMkE,UACvBd,EAAWtC,KAAKd,MAAMoD,SACtBe,EAAWvD,IAAQwD,WAAWtD,KAAKd,MAAM6B,cAC3CwC,EAASC,SAAS1D,IAAQM,OAAOJ,KAAKd,MAAM6B,aAAc,MAC1D0C,EAAWJ,EACXK,EAAY5D,IAAQ6D,SAASN,GAET,IAArBD,EAAUQ,QACXH,EAAS3D,IAAQ+D,SAASR,EAAUD,EAAU,GAAG,IACjDM,EAAU5D,IAAQ+D,SAASR,EAAUD,EAAU,GAAG,KAEvB,IAArBA,EAAUQ,OACF,IAAXL,GAA2B,IAAXA,GACjBE,EAAS3D,IAAQ+D,SAASR,EAAUD,EAAU,GAAG,IACjDM,EAAU5D,IAAQ+D,SAASR,EAAUD,EAAU,GAAG,MAGlDK,EAAS3D,IAAQ+D,SAASR,EAAUD,EAAU,GAAG,IACjDM,EAAU5D,IAAQ+D,SAASR,EAAUD,EAAU,GAAG,KAGzB,IAArBA,EAAUQ,SAChBH,EAAS3D,IAAQ+D,SAASR,EAAUD,EAAUG,GAAQ,IACtDG,EAAU5D,IAAQ+D,SAASR,EAAUD,EAAUG,GAAQ,KAQzD,IALA,IACMlC,EAAO,GACTyC,EAAWL,EACXM,EAAY,GACZC,EAAalE,IAAQmE,oBAAoBP,EAAWD,GAAYnB,EAAW,EACzEwB,EAAWhE,IAAQoE,WAAWR,EAAWpB,EAAW0B,IAAY,CACpE,IADoE,IAAAzC,EAAA,SAC3DtB,GACP,IAAIQ,EAAW,GACfA,GAAYX,IAAQqE,SAASL,EAAUJ,GAAa,GAAK,YACzDjD,GAAYX,IAAQ8B,cAAckC,EAAUX,EAAKjE,MAAM2C,UAAWsB,EAAKjE,MAAM4C,SAAW,gBAAkB,GAE1G,IAAMsC,EAAYN,EAClBC,EAAU7D,KAERf,EAAAC,EAAAC,cAACgF,EAAD,CACElE,IAAOiE,EACP/B,KAAQvC,IAAQM,OAAOgE,EAhBZ,SAiBX3D,SAAYA,EACZ2B,YAAe,kBAAMe,EAAKjE,MAAMkD,YAAYgC,OAIhDN,EAAWhE,IAAQoE,WAAWJ,EAAU,KAhBjC7D,EAAI,EAAGA,EAAI,EAAGA,IAAKsB,IAkB5BF,EAAKnB,KACHf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMa,IAAK2D,GACvBC,IAGLA,EAAY,GAGd,OACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACdH,EAAAC,EAAAC,cAAA,KAAGE,QAASS,KAAK+C,eAAjB,kBACA5D,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAAkBU,KAAK6C,MAAMC,eAC1CzB,YA7E2BY,iBAsFxCM,EAAW3D,aAAeA,aC9EL0F,cACnB,SAAAA,EAAYpF,GAAO,IAAA2B,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAAxC,KAAAsE,IACjBzD,EAAA2B,OAAAE,EAAA,EAAAF,CAAAxC,KAAAwC,OAAAG,EAAA,EAAAH,CAAA8B,GAAA1B,KAAA5C,KAAMd,KACD2D,MAAQ,CACXhE,aAAc,IAAIC,KAClBiC,aAAc,IAAIjC,MAEpB+B,EAAKH,YAAcG,EAAKH,YAAYsC,KAAjBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA3B,KACnBA,EAAK7B,UAAY6B,EAAK7B,UAAUgE,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA3B,KACjBA,EAAK9B,UAAY8B,EAAK9B,UAAUiE,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA3B,KARAA,2EAWPS,GACVtB,KAAKkD,SAAS,CACZnC,aAAcO,IAEZtB,KAAKd,MAAMqF,gBAAevE,KAAKd,MAAMqF,eAAejD,uCAIxDtB,KAAKkD,SAAS,CACZrE,aAAciB,IAAQ0E,UAAUxE,KAAK6C,MAAMhE,aAAc,yCAKvDmB,KAAKd,MAAMuF,gBACT3E,IAAQ4E,OAAO1E,KAAK6C,MAAMhE,eAIhCmB,KAAKkD,SAAS,CACZrE,aAAciB,IAAQ6E,UAAU3E,KAAK6C,MAAMhE,aAAc,sCAI3D,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACuF,EAAD,CACE/F,aAAciB,IAAQM,OAAOJ,KAAK6C,MAAMhE,aAAc,aACtDG,UAAWgB,KAAKhB,UAChBD,UAAWiB,KAAKjB,YAElBI,EAAAC,EAAAC,cAACwF,EAAD,CAAWhG,aAAcmB,KAAK6C,MAAMhE,eACpCM,EAAAC,EAAAC,cAACyF,EAAD,CACEjG,aAAcmB,KAAK6C,MAAMhE,aACzBkC,aAAcf,KAAK6C,MAAM9B,aACzBL,YAAaV,KAAKU,YAClBiB,UAAW3B,KAAKd,MAAMyC,UACtBO,SAAUlC,KAAKd,MAAMgD,SACrBL,UAAW7B,KAAKd,MAAM2C,UACtBC,QAAS9B,KAAKd,MAAM4C,UAErB9B,KAAKd,MAAMoD,UAAYtC,KAAKd,MAAMyC,WAAa3B,KAAKd,MAAMkD,aAAepC,KAAKd,MAAMkE,UACnFjE,EAAAC,EAAAC,cAAC0F,EAAD,CACEhE,aAAcf,KAAK6C,MAAM9B,aACzBuB,SAAUtC,KAAKd,MAAMoD,SACrBc,UAAWpD,KAAKd,MAAMkE,UACtBhB,YAAapC,KAAKd,MAAMkD,YACxBF,SAAUlC,KAAKd,MAAMgD,SACrBL,UAAW7B,KAAKd,MAAM2C,UACtBC,QAAS9B,KAAKd,MAAM4C,UACf,WA9DyBG,iBAqEtCqC,EAAa1F,aA9EI,CACnBsD,SAAS,CAAC,wBACVuC,gBAAgB,EAChB9C,WAAW,EACXW,SAAU,GACViC,eAAgB,KAChBnC,YAAa,UCpBT4C,cACJ,SAAAA,EAAY9F,GAAM,IAAA2B,EAAA,OAAA2B,OAAAC,EAAA,EAAAD,CAAAxC,KAAAgF,IAChBnE,EAAA2B,OAAAE,EAAA,EAAAF,CAAAxC,KAAAwC,OAAAG,EAAA,EAAAH,CAAAwC,GAAApC,KAAA5C,KAAMd,KACD2D,MAAQ,CACXhB,UAAW,GACXC,QAAS,IAEXjB,EAAKoE,gBAAkBpE,EAAKoE,gBAAgBjC,KAArBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA3B,KANPA,+EAQFwB,GACc,KAAzBrC,KAAK6C,MAAMhB,UACZ7B,KAAKkD,SAAS,CACZrB,UAAWQ,KAGLvC,IAAQ4B,UAAU1B,KAAK6C,MAAMhB,UAAWQ,IAASA,EAAKrC,KAAK6C,MAAMhB,UACzE7B,KAAKkD,SAAS,CACZrB,UAAW,GACXC,QAAS,KAIX9B,KAAKkD,SAAS,CACZpB,QAASO,qCAMb,IAAM6C,EAAWxF,OAAOC,WAAa,KAAO,CAACwF,MAAM,OAAS,CAACA,MAAM,QAUnE,OACEhG,EAAAC,EAAAC,cAAA,OAAK+F,MAASF,GAEZ/F,EAAAC,EAAAC,cAACgG,EAAD,CACEZ,gBAAc,EACd9C,WAAS,EACTW,SAAY,GACZT,UAAa7B,KAAK6C,MAAMhB,UACxBC,QAAW9B,KAAK6C,MAAMf,QACtBsB,UAlBY,CAChB,CAAC,IAAK,IACN,CAAC,EAAG,MACJ,CAAC,EAAG,IACJ,CAAC,IAAK,IACN,CAAC,GAAI,IACL,CAAC,EAAG,GACJ,CAAC,EAAG,KAYAhB,YAAepC,KAAKiF,0BAjDR3E,IAAMC,WA0DbyE,YAEfM,IAASC,OAAOpG,EAAAC,EAAAC,cAACmG,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.866ca850.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  currentMonth: PropTypes.string,\r\n  prevMonth: PropTypes.func,\r\n  nextMonth: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  currentMonth: new Date(),\r\n  prevMonth: null,\r\n  nextMonth: null,\r\n};\r\n\r\nfunction Header(props) {\r\n  return(\r\n    <div className=\"header row flex-middle\">\r\n\r\n      <div className=\"col col-start\">\r\n        \r\n        <div className=\"icon\" onClick={props.prevMonth}>\r\n          chevron_left\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"col col-center\">\r\n\r\n        <span>\r\n          {props.currentMonth}\r\n        </span>\r\n\r\n      </div>\r\n\r\n      <div\r\n        className=\"col col-end\"\r\n        onClick={props.nextMonth}>\r\n\r\n        <div className=\"icon\">chevron_right</div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nHeader.propTypes = propTypes;\r\nHeader.defaultProps = defaultProps;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\n\r\nconst propTypes = {\r\n  currentMonth: PropTypes.instanceOf(Date)\r\n};\r\n\r\nconst defaultProps = {\r\n  currentMonth: null,\r\n};\r\n\r\nexport default class DayTitles extends React.Component {\r\n  render() {\r\n    const dateFormat = window.innerWidth > 767 ? \"dddd\" : \"ddd\";\r\n    const days = [];\r\n    let startDate = dateFns.startOfWeek(this.props.currentMonth);\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push(\r\n        <div className=\"col col-center\" key={i}>\r\n\r\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"days row\">\r\n      {days}\r\n    </div>;\r\n  }\r\n}\r\n\r\nDayTitles.propTypes = propTypes;\r\nDayTitles.defaultProps = defaultProps;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  classSet: PropTypes.string,\r\n  date: PropTypes.string,\r\n  onDateClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  classSet: \"\",\r\n  date: 1,\r\n  onDateClick: null,\r\n};\r\n\r\nfunction Day(props) {\r\n  return(\r\n    <div\r\n      className={'col cell' + props.classSet}\r\n      onClick={props.onDateClick}>\r\n\r\n      <span className=\"number\">\r\n        {props.date}\r\n      </span>\r\n\r\n      <span className=\"bg\">\r\n        {props.date}\r\n      </span>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nDay.propTypes = propTypes;\r\nDay.defaultProps = defaultProps;\r\n\r\nexport default Day;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport Day from './Day';\r\n\r\nconst propTypes = {\r\n  currentMonth: PropTypes.instanceOf(Date),\r\n  selectedDate: PropTypes.instanceOf(Date),\r\n  onDateClick: PropTypes.func,\r\n  clickable: PropTypes.bool,\r\n  bookings: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nconst defaultProps = {\r\n  currentMonth: null,\r\n  selectedDate: null,\r\n  onDateClick: null,\r\n  clickable: true,\r\n  bookings: ['07-03-19', '02-04-19'],\r\n};\r\n\r\nexport default class Weeks extends PureComponent {\r\n  render() {\r\n    const {currentMonth, selectedDate} = this.props;\r\n    const monthStart = dateFns.startOfMonth(currentMonth);\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    const endDate = dateFns.endOfWeek(dateFns.endOfMonth(monthStart));\r\n\r\n    const dateFormat = \"D\";\r\n    const rows = [];\r\n    let days = [];\r\n    let day = startDate;\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        let classSet = '';\r\n        classSet += ' ' + dateFns.format(day, 'ddd');\r\n        classSet += dateFns.isToday(day) ? ' today' : ''\r\n        classSet += dateFns.isSameMonth(day, currentMonth) ? '' : ' disabled'\r\n        classSet += dateFns.isSameDay(day, selectedDate) ? ' selected' : ''\r\n        classSet += this.props.clickable ? '' : ' disabled'\r\n        classSet += dateFns.isWithinRange(day, this.props.startTime, this.props.endTime) ? ' selected' : '';\r\n\r\n        const cloneDay = day;\r\n        days.push(\r\n          <Day\r\n            classSet={classSet}\r\n            key={day}\r\n            date={dateFns.format(day, dateFormat)}\r\n            onDateClick={() => this.props.onDateClick(cloneDay)}\r\n            >\r\n          </Day>\r\n        );\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body\">{rows}</div>;\r\n    }\r\n  }\r\n\r\n  Weeks.propTypes = propTypes;\r\n  Weeks.defaultProps = defaultProps;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  classSet: PropTypes.string,\r\n  time: PropTypes.string,\r\n  onTimeClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  classSet: '',\r\n  time: 12-30,\r\n  onTimeClick: null,\r\n};\r\n\r\nfunction TimeSlot(props) {\r\n  return(\r\n    <div\r\n      className={'col cell' + props.classSet}\r\n      onClick={props.onTimeClick}>\r\n      <p>\r\n        {props.time}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nTimeSlot.propTypes = propTypes;\r\nTimeSlot.defaultProps = defaultProps;\r\n\r\nexport default TimeSlot;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from \"date-fns\";\r\nimport TimeSlot from './TimeSlot';\r\n\r\nconst propTypes = {\r\n  selectedDate: PropTypes.instanceOf(Date),\r\n  timeSlot: PropTypes.number,\r\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  onTimeClick: PropTypes.func,\r\n  bookings: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nconst defaultProps = {\r\n  selectedDate: new Date(),\r\n  timeSlot: 30,\r\n  onTimeClick: null,\r\n  bookings:['05-10-19', '02-04-19'],\r\n};\r\n\r\nexport default class TimeSelect extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {selectorClass: 'inactive'};\r\n    this.selectorClick = this.selectorClick.bind(this);\r\n  }\r\n\r\n  selectorClick() {\r\n    this.setState({\r\n      selectorClass: this.state.selectorClass === 'inactive' ? 'active' : 'inactive'\r\n    });\r\n  };\r\n\r\n  render(){\r\n    const openHours = this.props.openHours;\r\n    const timeSlot = this.props.timeSlot;\r\n    const dayStart = dateFns.startOfDay(this.props.selectedDate);\r\n    let dayNum = parseInt(dateFns.format(this.props.selectedDate, 'd'));\r\n    let openTime = dayStart;\r\n    let closeTime = dateFns.endOfDay(dayStart);\r\n\r\n    if(openHours.length === 1){\r\n      openTime=dateFns.addHours(dayStart, openHours[0][0]);\r\n      closeTime=dateFns.addHours(dayStart, openHours[0][1]);\r\n    }\r\n    else if(openHours.length === 2) {\r\n      if(dayNum === 0 || dayNum === 6) {\r\n        openTime=dateFns.addHours(dayStart, openHours[1][0]);\r\n        closeTime=dateFns.addHours(dayStart, openHours[1][1]);\r\n      }\r\n      else {\r\n        openTime=dateFns.addHours(dayStart, openHours[0][0]);\r\n        closeTime=dateFns.addHours(dayStart, openHours[0][1]);\r\n      }\r\n    }\r\n    else if(openHours.length === 7){\r\n      openTime=dateFns.addHours(dayStart, openHours[dayNum][0]);\r\n      closeTime=dateFns.addHours(dayStart, openHours[dayNum][1])\r\n    }\r\n\r\n    const dateFormat = 'HH-mm';\r\n    const rows = [];\r\n    let timePick = openTime;\r\n    let timeSlots = [];\r\n    let difference = dateFns.differenceInMinutes(closeTime, openTime) / timeSlot % 4;\r\n    while(timePick < dateFns.addMinutes(closeTime, timeSlot * difference)){\r\n      for (let i = 0; i < 4; i++) {\r\n        let classSet = '';\r\n        classSet += dateFns.isBefore(timePick, closeTime) ? '' : ' disabled';\r\n        classSet += dateFns.isWithinRange(timePick, this.props.startTime, this.props.endTime) ? ' selectedTime' : '';\r\n        // if (this.props.bookings) classSet += this.props.bookings.includes(timePick) ? ' booked' : ''\r\n        const cloneTime = timePick;\r\n        timeSlots.push(\r\n\r\n          <TimeSlot\r\n            key = {cloneTime}\r\n            time = {dateFns.format(cloneTime, dateFormat)}\r\n            classSet = {classSet}\r\n            onTimeClick = {() => this.props.onTimeClick(cloneTime)}\r\n            >\r\n          </TimeSlot>\r\n        );\r\n        timePick = dateFns.addMinutes(timePick, 30);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={timePick}>\r\n          {timeSlots}\r\n        </div>\r\n      );\r\n      timeSlots = [];\r\n    }\r\n\r\n    return (\r\n      <div className={'timeSelector'}>\r\n        <p onClick={this.selectorClick}>Make a booking</p>\r\n        <div className={\"optionSpacer body\"}>\r\n          <div className={\"optionHolder \" + this.state.selectorClass}>\r\n            {rows}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimeSelect.propTypes = propTypes;\r\nTimeSelect.defaultProps = defaultProps;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport dateFns from 'date-fns';\r\nimport Header from './Header';\r\nimport DayTitles from './DayTitles';\r\nimport Weeks from './Weeks';\r\nimport TimeSelect from './TimeSelect';\r\nimport './App.scss';\r\n\r\nconst propTypes = {\r\n  openHours: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  booking: PropTypes.arrayOf(PropTypes.string),\r\n  disableHistory: PropTypes.bool,\r\n  clickable: PropTypes.bool,\r\n  timeSlot: PropTypes.number,\r\n  onDateFunction: PropTypes.func,\r\n  onTimeClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  bookings:[\"07-03-19', '02-04-19\"],\r\n  disableHistory: true,\r\n  clickable: true,\r\n  timeSlot: 30,\r\n  onDateFunction: null,\r\n  onTimeClick: null\r\n};\r\n\r\nexport default class TimeCalendar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMonth: new Date(),\r\n      selectedDate: new Date(),\r\n    };\r\n    this.onDateClick = this.onDateClick.bind(this);\r\n    this.nextMonth = this.nextMonth.bind(this);\r\n    this.prevMonth = this.prevMonth.bind(this);\r\n  }\r\n\r\n  onDateClick(day) {\r\n    this.setState({\r\n      selectedDate: day\r\n    });\r\n    if (this.props.onDateFunction)this.props.onDateFunction(day);\r\n  };\r\n\r\n  nextMonth() {\r\n    this.setState({\r\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  prevMonth() {\r\n    if (this.props.disableHistory) {\r\n      if (dateFns.isPast(this.state.currentMonth)){\r\n        return\r\n      }\r\n    }\r\n    this.setState({\r\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        <Header\r\n          currentMonth={dateFns.format(this.state.currentMonth, \"MMMM YYYY\")}\r\n          nextMonth={this.nextMonth}\r\n          prevMonth={this.prevMonth}\r\n          />\r\n        <DayTitles currentMonth={this.state.currentMonth} />\r\n        <Weeks\r\n          currentMonth={this.state.currentMonth}\r\n          selectedDate={this.state.selectedDate}\r\n          onDateClick={this.onDateClick}\r\n          clickable={this.props.clickable}\r\n          bookings={this.props.bookings}\r\n          startTime={this.props.startTime}\r\n          endTime={this.props.endTime}\r\n          />\r\n        {this.props.timeSlot && this.props.clickable && this.props.onTimeClick && this.props.openHours ?\r\n          <TimeSelect\r\n            selectedDate={this.state.selectedDate}\r\n            timeSlot={this.props.timeSlot}\r\n            openHours={this.props.openHours}\r\n            onTimeClick={this.props.onTimeClick}\r\n            bookings={this.props.bookings}\r\n            startTime={this.props.startTime}\r\n            endTime={this.props.endTime}\r\n            /> : \"\"}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    TimeCalendar.propTypes = propTypes;\r\n    TimeCalendar.defaultProps = defaultProps;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TimeCalendar from './TimeCalendar';\r\nimport dateFns from \"date-fns\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      startTime: '',\r\n      endTime: ''\r\n    };\r\n    this.handleTimeClick = this.handleTimeClick.bind(this);\r\n  }\r\n  handleTimeClick(time) {\r\n    if(this.state.startTime === ''){\r\n      this.setState({\r\n        startTime: time\r\n      });\r\n    }\r\n    else if (!dateFns.isSameDay(this.state.startTime, time) || time<this.state.startTime){\r\n      this.setState({\r\n        startTime: '',\r\n        endTime: ''\r\n      });\r\n    }\r\n    else{\r\n      this.setState({\r\n        endTime: time\r\n      });\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const divStyle = window.innerWidth > 1023 ? {width:'40%'} : {width:'100%'};\r\n    const openHours = [\r\n      [9.5, 15],\r\n      [9, 23.5],\r\n      [8, 16],\r\n      [8.5, 18],\r\n      [10, 10],\r\n      [0, 0],\r\n      [9, 17]\r\n    ];\r\n    return(\r\n      <div style = {divStyle}>\r\n\r\n        <TimeCalendar\r\n          disableHistory\r\n          clickable\r\n          timeSlot = {30}\r\n          startTime = {this.state.startTime}\r\n          endTime = {this.state.endTime}\r\n          openHours = {openHours}\r\n          onTimeClick = {this.handleTimeClick}\r\n          />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Welcome;\r\n\r\nReactDOM.render(<Welcome />, document.getElementById('root'));\r\n"],"sourceRoot":""}